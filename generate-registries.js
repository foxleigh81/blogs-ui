#! /usr/bin/env node

/**
 * This file automatically generates the index registries for all directories specified in `directories` below. It runs automatically when `yarn preflight` runs or you can run it via `yarn genreg`
 */

const fs = require('fs');
const path = require('path');
const camelCase = require('camelcase');

const directories = ['./components', './helpers'];

const message = `/***
This file is autogenerated, please do not edit it.
To generate an updated version, please run \`yarn genreg\`

If you register your helper with this index, it can be referenced more easily. 

e.g. without registering

  import fetcher from '@helpers/fetcher
  import poster from '@helpers/poster

e.g. with registering

  import { fetcher, poster } from '@helpers/index'
*/
`;

const generateLines = (directory) => {
  // If the directory only has one file then it's only the index file and we should generate just an empty export
  if (fs.readdirSync(directory).length <= 1) {
    console.log(`${directory} is empty. Generating empty export`);
    return `export {}`;
  }
  // If it's not empty, get all the files in the directory and generate the lines
  return fs
    .readdirSync(path.resolve(directory))
    .map((file) => {
      const include = '.ts';
      const exclude = `index|.spec.ts`;
      // Only look for requested files and ignore indexes
      if (file.match(exclude)) return null;
      if (!file.match(include))
        return `export { default as ${camelCase(file, {
          pascalCase: true
        })} } from './${file}'`;
      const fileNoExt = file.replace(include, '');
      const varName = camelCase(fileNoExt);
      return `export { default as ${varName} } from './${fileNoExt}'`;
    })
    .filter((item) => item)
    .toString()
    .replace(/,/g, '\n');
};

directories.forEach((directory) => {
  const fileContents = `${message}\n\n${generateLines(directory)}`;
  fs.writeFileSync(path.resolve(directory, `index.ts`), fileContents);
});
